{
	"name": "Student Data",
	"properties": {
		"activities": [
			{
				"name": "Set Environment",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Validation1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [
					{
						"name": "TriggerName",
						"value": "@pipeline().TriggerName"
					}
				],
				"typeProperties": {
					"expression": {
						"value": "@or(equals(pipeline().TriggerName, 'Manual'), equals(pipeline().TriggerName, 'Sandbox'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Trigger Env",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "environment",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Manual",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "environment",
								"value": "DEV"
							}
						}
					]
				}
			},
			{
				"name": "Remove Duplicates",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[RemoveDuplicates]"
				},
				"linkedServiceName": {
					"referenceName": "SqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DbName": "@concat('Wakeschool_',variables('environment'))"
					}
				}
			},
			{
				"name": "Validation1",
				"type": "Validation",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SourceFile",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "Students.csv",
							"Directory": "DEV/Source"
						}
					},
					"timeout": "0.00:00:05",
					"sleep": 10
				}
			},
			{
				"name": "Fail1",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Validation1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Couldn't find input file",
					"errorCode": "1"
				}
			},
			{
				"name": "Read Config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "SourceFile",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "config.json",
							"Directory": "/"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Injest Student File",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SourceFile",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "Students.csv",
							"Directory": "DEV/Source"
						}
					}
				]
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set Environment",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Student_Id",
									"type": "Int32"
								},
								"sink": {
									"name": "Student_Id",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Street",
									"type": "String"
								},
								"sink": {
									"name": "Street",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String"
								},
								"sink": {
									"name": "City",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "State",
									"type": "String"
								},
								"sink": {
									"name": "State",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "MySqlTable",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationFile",
						"type": "DatasetReference",
						"parameters": {
							"File_Name": "Students.csv",
							"environment": "DEV"
						}
					}
				]
			}
		],
		"variables": {
			"environment": {
				"type": "String"
			}
		},
		"annotations": []
	}
}